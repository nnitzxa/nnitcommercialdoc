-- MySQL Script generated by MySQL Workbench
-- 01/15/16 21:03:55
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema shoppingmall
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema shoppingmall
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `shoppingmall` DEFAULT CHARACTER SET utf8 ;
USE `shoppingmall` ;

-- -----------------------------------------------------
-- Table `shoppingmall`.`Member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Member` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `CELL_PHONE` VARCHAR(15) NOT NULL COMMENT '手机号码（这个必须让用户注册）。\n通过用户手机号作为APP的登录名。减轻终端用户记忆用户名的麻烦',
  `NICK_NAME` VARCHAR(45) NULL COMMENT '昵称',
  `PASSWORD` VARCHAR(45) NULL COMMENT '密码。采用MD5加密',
  `SESSION_ID` VARCHAR(120) NULL COMMENT '每次用户登录，记录当前登录的session id',
  `LATEST_LOGIN` DATETIME NULL COMMENT '记录用户最后登录的时间、日期\n采用格式：\nYYYY-MM-DD 24HH:mm:ss',
  `FETCH_BACK_PWD` VARCHAR(120) NULL COMMENT '用户遗失密码，需要更改密码。\n这个字段用户遗失密码后，用户激活更改个密码link的有效期',
  `ACCOUNT_NUMBER` VARCHAR(45) NOT NULL COMMENT '账号（真正唯一标识一个用户的ID）\n采用自己设计的算法',
  `GRADE` VARCHAR(255) NULL COMMENT '会员等级',
  `STATUS` VARCHAR(48) NOT NULL COMMENT '用户的状态\n新注册的用户都是“激活”状态',
  `IS_ONLINE` VARCHAR(48) NOT NULL COMMENT '是否在线状态',
  `GENDER` VARCHAR(48) NULL COMMENT '性别',
  `PIC` VARCHAR(300) NULL COMMENT '头像（一个PIC地址。可能是一个微软云）',
  `EMAIL_ADDR` VARCHAR(48) NULL COMMENT '电子邮件地址',
  `TYPE` VARCHAR(48) NULL COMMENT '会员的类型',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
COMMENT = '会员基本信息表';


-- -----------------------------------------------------
-- Table `shoppingmall`.`Integral`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Integral` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `BALANCE` INT NOT NULL DEFAULT 0 COMMENT '当前可用积分总数 （积分都是整数）',
  `EXPIRED_DATE` DATETIME NULL COMMENT '积分过期时间',
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '积分归属于哪个用户',
  PRIMARY KEY (`ID`),
  INDEX `fk_Integral_Member1_idx` (`MEMBER_ID` ASC),
  CONSTRAINT `fk_Integral_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '积分表';


-- -----------------------------------------------------
-- Table `shoppingmall`.`IntegralTransaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`IntegralTransaction` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `AMOUNT` INT NOT NULL COMMENT '交易使用的积分',
  `TRX_TYPE_ID` VARCHAR(48) NOT NULL COMMENT '交易类型：购买、撤回 ',
  `TRX_DATETIME` DATETIME NOT NULL COMMENT '交易日期时间',
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '交易的用户',
  `STATUS_ID` VARCHAR(48) NULL COMMENT '记录成功还是失败',
  `SHOP_ID` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_IntegralTransaction_Member1_idx` (`MEMBER_ID` ASC),
  CONSTRAINT `fk_IntegralTransaction_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '会员积分交易记录表';


-- -----------------------------------------------------
-- Table `shoppingmall`.`Couponbackage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Couponbackage` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `CODE` VARCHAR(45) NULL COMMENT '优惠券的编码. 这个编码需要在APP端生成条码或者二维码（建议用二维码）\n这个编码必须和“discount_user”表中的code一样',
  `COUPON_TYPE` VARCHAR(48) NULL COMMENT '优惠券类型：\n团购券\n优惠券\n活动券\n礼品兑换券',
  `STATUS_ID` VARCHAR(48) NULL COMMENT '优惠券的状态\n未使用\n已使用\n过期',
  `MEMBER_ID` VARCHAR(48) NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Couponbackage_Member1_idx` (`MEMBER_ID` ASC),
  CONSTRAINT `fk_Couponbackage_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '用户的各种优惠券.\n优惠券还需要与“商户”关联';


-- -----------------------------------------------------
-- Table `shoppingmall`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Order` (
  `ID` VARCHAR(48) NOT NULL COMMENT '订单流水编号（订单号）',
  `ORDER_TYPE_ID` VARCHAR(48) NULL COMMENT '订单类型',
  `ORDER_DATETIME` DATETIME NULL COMMENT '订单生成日期',
  `AMOUNT` DECIMAL NULL COMMENT '订单总价格 - 如果使用优惠券，订单价格可以为0',
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '订单所属会员',
  `STATUS_ID` VARCHAR(48) NULL COMMENT '订单状态',
  `IS_USED_DISCOUNT` TINYINT(1) NULL COMMENT '是否使用优惠券',
  `DISCOUNT_ID` VARCHAR(48) NULL COMMENT '使用的优惠券的ID（每笔交易只能使用一个优惠券。以后可以扩展，但是需要拆表）',
  PRIMARY KEY (`ID`),
  INDEX `fk_Order_Member1_idx` (`MEMBER_ID` ASC),
  CONSTRAINT `fk_Order_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '用户普通交易（非积分）的记录';


-- -----------------------------------------------------
-- Table `shoppingmall`.`type_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`type_status` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `LABEL` VARCHAR(20) NULL COMMENT '类型或者状态的名称',
  `SHORT_LABEL` VARCHAR(10) NULL COMMENT '类型或者状态的简称')
ENGINE = InnoDB
COMMENT = '字典表。用来记录各种类型+状态';


-- -----------------------------------------------------
-- Table `shoppingmall`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Category` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `LABEL` VARCHAR(45) NULL COMMENT '类别名称',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
COMMENT = '商户的类别';


-- -----------------------------------------------------
-- Table `shoppingmall`.`shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`shop` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `SHOP_NAME` VARCHAR(255) NOT NULL COMMENT '商铺名称',
  `FLOOR` INT(11) NOT NULL COMMENT '商户所在楼层',
  `LOCATION` VARCHAR(255) NOT NULL COMMENT '商铺的铺位号（目前就是一个文字描述）',
  `LOGO` VARCHAR(1000) NOT NULL COMMENT '商铺的Logo标识。 应是一个图片，指向云存储的一个地址（URI）',
  `TRUE_SCENE` VARCHAR(300) NULL COMMENT '实景图（指向云存储的一个UIR。目前，一个商铺就提供一个实景图）',
  `TELEPHONE` VARCHAR(20) NOT NULL COMMENT '商铺的联系电话',
  `CONTACT` VARCHAR(32) NOT NULL COMMENT '店铺联系人（或者法人）',
  `CONTACT_TEL` VARCHAR(20) NULL COMMENT '联系人（法人）的电话',
  `INTRODUCTION` TEXT NOT NULL COMMENT '商户的简介',
  `CATEGORY_ID` VARCHAR(48) NOT NULL COMMENT '店铺对应的类别',
  `CREATE_TIME` DATETIME NOT NULL COMMENT '店铺创建时间（在系统里创建的时间，不是店铺开业时间）',
  `OPENING_TIME` DATETIME NULL COMMENT '店铺开业时间',
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '该店铺的对应这个系统的管理员',
  PRIMARY KEY (`ID`),
  INDEX `fk_shop_Member1_idx` (`MEMBER_ID` ASC),
  INDEX `fk_shop_Category1_idx` (`CATEGORY_ID` ASC),
  CONSTRAINT `fk_shop_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shop_Category1`
    FOREIGN KEY (`CATEGORY_ID`)
    REFERENCES `shoppingmall`.`Category` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shoppingmall`.`evaluation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`evaluation` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `SCORE` FLOAT NULL DEFAULT 1.0 COMMENT '商户的综合评分。是一个一位的小数。例如：8.6',
  `CONTENT` TEXT NOT NULL COMMENT '评论内容',
  `POST_TIME` DATETIME NOT NULL COMMENT '发表时间',
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '评论发出的人',
  `PIC` VARCHAR(300) NULL COMMENT '品论可以加图片。这里记录图片的URI',
  `SHOP_ID` VARCHAR(48) NOT NULL COMMENT '此条评论发给的商铺',
  PRIMARY KEY (`ID`),
  INDEX `fk_evaluation_Member1_idx` (`MEMBER_ID` ASC),
  INDEX `fk_evaluation_shop1_idx` (`SHOP_ID` ASC),
  CONSTRAINT `fk_evaluation_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evaluation_shop1`
    FOREIGN KEY (`SHOP_ID`)
    REFERENCES `shoppingmall`.`shop` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '用户对商家的评论';


-- -----------------------------------------------------
-- Table `shoppingmall`.`Groupon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Groupon` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `SHOP_ID` VARCHAR(48) NOT NULL COMMENT '团购活动所属的商铺',
  `TITLE` VARCHAR(100) NOT NULL COMMENT '团购活动的标题',
  `PICTURE` VARCHAR(300) NULL COMMENT '团购活动的宣传图片（指向一个云存储的URI）',
  `ORIGINAL_PRICE` DECIMAL(10,2) NOT NULL COMMENT '团购活动中，商品的原始价格',
  `CURRENT_PRICE` DECIMAL(10,2) NOT NULL COMMENT '团购活动中商品的团购价格',
  `START_TIME` DATE NOT NULL COMMENT '团购开始日期 (精度到日就可以了，选用DATE）',
  `END_TIME` DATE NOT NULL COMMENT '团购结束日期 (精度到日就可以了，选用DATE）',
  `DETAILS` TEXT NOT NULL COMMENT '团购的描述',
  `CREATE_TIME` DATETIME NULL COMMENT '发起该团购的日期、时间',
  PRIMARY KEY (`ID`),
  INDEX `ShopId` (`SHOP_ID` ASC),
  CONSTRAINT `groupbuying_ibfk_1`
    FOREIGN KEY (`SHOP_ID`)
    REFERENCES `shoppingmall`.`shop` (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '团购活动';


-- -----------------------------------------------------
-- Table `shoppingmall`.`Groupon_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`Groupon_order` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `GROUPON_ID` VARCHAR(48) NOT NULL COMMENT '该团购交易对应的团购活动',
  `CREATE_TIME` DATETIME NOT NULL COMMENT '此订单产生的时间',
  `AMOUNT` DECIMAL(10,2) NOT NULL COMMENT '此次团购的总金额',
  `STATUS_ID` VARCHAR(48) NOT NULL COMMENT '团购订单状态（已提交，已付款，已使用，退款中，已退款，已作废）\n关联到TYPE_AND_STATUS表',
  `SETTLEMENT_TIME` DATETIME NULL COMMENT '付款时间',
  `ORDER_TYPE` VARCHAR(48) NULL COMMENT '交易类型',
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '团购购买者',
  `SHOP_ID` VARCHAR(48) NULL COMMENT '团购订单归属的商铺',
  PRIMARY KEY (`ID`),
  INDEX `GroupBuyingId` (`GROUPON_ID` ASC),
  INDEX `fk_Groupon_order_Member1_idx` (`MEMBER_ID` ASC),
  CONSTRAINT `groupbuyingorder_ibfk_1`
    FOREIGN KEY (`GROUPON_ID`)
    REFERENCES `shoppingmall`.`Groupon` (`ID`),
  CONSTRAINT `fk_Groupon_order_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '团购活动产生的购买记录。这个记录针对商铺而言。 商铺的管理员能看到目前有多少人参与了当前的团购活动';


-- -----------------------------------------------------
-- Table `shoppingmall`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`product` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `PRODUCT_NAME` VARCHAR(80) NOT NULL COMMENT '商品名称',
  `PICTURE` VARCHAR(300) NULL COMMENT '商品的图片（指向一个云存储URI）',
  `UNIT_PRICE` DECIMAL NULL COMMENT '商品单价',
  `TOP_CARRIAGE_TIME` DATETIME NULL COMMENT '商品上架时间',
  `SHOP_ID` VARCHAR(48) NOT NULL COMMENT '外键，确定商品归属的商铺',
  PRIMARY KEY (`ID`, `PRODUCT_NAME`),
  INDEX `fk_product_shop1_idx` (`SHOP_ID` ASC),
  CONSTRAINT `fk_product_shop1`
    FOREIGN KEY (`SHOP_ID`)
    REFERENCES `shoppingmall`.`shop` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '商品表';


-- -----------------------------------------------------
-- Table `shoppingmall`.`discount`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`discount` (
  `ID` VARCHAR(48) NOT NULL COMMENT '主键',
  `TITLE` VARCHAR(100) NULL COMMENT '优惠活动的名称',
  `PICTURE` VARCHAR(200) NULL COMMENT '优惠活动的图片（指向云存储的一个UIR）',
  `START_DATE` DATE NULL COMMENT '优惠活动开始日期',
  `END_DATE` DATE NULL COMMENT '优惠活动结束日期',
  `DETAILS` VARCHAR(300) NULL COMMENT '优惠活动的具体内容',
  `CREATE_TIME` DATETIME NULL COMMENT '优惠活动创建时间（及其日期）',
  `SHOP_ID` VARCHAR(48) NOT NULL COMMENT '优惠活动所属的商铺',
  `DISCOUNT_VALUE` INT NULL COMMENT '折扣的数量（这里提供一个数值，具体的折扣单元，由DISCOUNT_UNIT来提供说明）',
  `DISCOUNT_UNIT` VARCHAR(45) NULL COMMENT '折扣单元。 例如：（7.5）折， （80）%等等',
  PRIMARY KEY (`ID`),
  INDEX `fk_discount_shop1_idx` (`SHOP_ID` ASC),
  CONSTRAINT `fk_discount_shop1`
    FOREIGN KEY (`SHOP_ID`)
    REFERENCES `shoppingmall`.`shop` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '优惠活动（促销规则）';


-- -----------------------------------------------------
-- Table `shoppingmall`.`favorit_shop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`favorit_shop` (
  `ID` VARCHAR(48) NOT NULL COMMENT '唯一标识',
  `SHOP_ID` VARCHAR(48) NOT NULL,
  `MEMBER_ID` VARCHAR(48) NOT NULL,
  PRIMARY KEY (`SHOP_ID`, `MEMBER_ID`),
  INDEX `fk_shop_has_Member_Member1_idx` (`MEMBER_ID` ASC),
  INDEX `fk_shop_has_Member_shop1_idx` (`SHOP_ID` ASC),
  CONSTRAINT `fk_shop_has_Member_shop1`
    FOREIGN KEY (`SHOP_ID`)
    REFERENCES `shoppingmall`.`shop` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_shop_has_Member_Member1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shoppingmall`.`order_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`order_product` (
  `ID` VARCHAR(48) NOT NULL COMMENT '表记录编号',
  `PRODUCT_ID` VARCHAR(48) NOT NULL COMMENT '购买的商品编号',
  `ORDER_ID` VARCHAR(48) NOT NULL COMMENT '对应的交易记录',
  `QUANTITY` INT NULL COMMENT '该商品在这个Order中的购买数量',
  PRIMARY KEY (`PRODUCT_ID`, `ORDER_ID`),
  INDEX `fk_product_has_Order_Order1_idx` (`ORDER_ID` ASC),
  INDEX `fk_product_has_Order_product1_idx` (`PRODUCT_ID` ASC),
  CONSTRAINT `fk_product_has_Order_product1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoppingmall`.`product` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_Order_Order1`
    FOREIGN KEY (`ORDER_ID`)
    REFERENCES `shoppingmall`.`Order` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '一个订单，可以有多个商品；\n商品也同时会出现在不同人的订单上';


-- -----------------------------------------------------
-- Table `shoppingmall`.`IntegralTransaction_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`IntegralTransaction_product` (
  `ID` VARCHAR(48) NOT NULL COMMENT '编号',
  `PRODUCT_ID` VARCHAR(48) NOT NULL COMMENT '交易的商品编号',
  `TRANSACTION_ID` VARCHAR(48) NOT NULL COMMENT '对应的积分交易编号',
  `QUANTITY` INT NULL COMMENT '商品交易的数量',
  `IntegralTransaction_productcol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PRODUCT_ID`, `TRANSACTION_ID`),
  INDEX `fk_IntegralTransaction_has_product_product1_idx` (`PRODUCT_ID` ASC),
  INDEX `fk_IntegralTransaction_has_product_IntegralTransaction1_idx` (`TRANSACTION_ID` ASC),
  CONSTRAINT `fk_IntegralTransaction_has_product_IntegralTransaction1`
    FOREIGN KEY (`TRANSACTION_ID`)
    REFERENCES `shoppingmall`.`IntegralTransaction` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_IntegralTransaction_has_product_product1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoppingmall`.`product` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '积分交易的中间表。用于记录每笔交易的具体商品信息';


-- -----------------------------------------------------
-- Table `shoppingmall`.`discount`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`discount` (
  `ID` VARCHAR(48) NOT NULL,
  `TITLE` VARCHAR(100) NULL COMMENT '优惠活动的名称',
  `PICTURE` VARCHAR(200) NULL COMMENT '优惠活动的图片（指向云存储的一个UIR）',
  `START_DATE` DATE NULL COMMENT '优惠活动开始日期',
  `END_DATE` DATE NULL COMMENT '优惠活动结束日期',
  `DETAILS` VARCHAR(300) NULL COMMENT '优惠活动的具体内容',
  `CREATE_TIME` DATETIME NULL COMMENT '优惠活动创建时间（及其日期）',
  `SHOP_ID` VARCHAR(48) NOT NULL COMMENT '优惠活动所属的商铺',
  `DISCOUNT_VALUE` INT NULL COMMENT '折扣的数量（这里提供一个数值，具体的折扣单元，由DISCOUNT_UNIT来提供说明）',
  `DISCOUNT_UNIT` VARCHAR(45) NULL COMMENT '折扣单元。 例如：（7.5）折， （80）%等等',
  PRIMARY KEY (`ID`),
  INDEX `fk_discount_shop1_idx` (`SHOP_ID` ASC),
  CONSTRAINT `fk_discount_shop1`
    FOREIGN KEY (`SHOP_ID`)
    REFERENCES `shoppingmall`.`shop` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '优惠活动（促销规则）';


-- -----------------------------------------------------
-- Table `shoppingmall`.`discount_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoppingmall`.`discount_user` (
  `ID` VARCHAR(48) NOT NULL,
  `MEMBER_ID` VARCHAR(48) NOT NULL COMMENT '可以使用该优惠的用户标识',
  `CODE` VARCHAR(45) NULL COMMENT '优惠产生的编shoppingmall码（不同的用户，即使是同一个优惠活动，这个编码还是不同的）\n采用的算法：\n用户ID、优惠ID、商户ID、优惠时间，这4个参数做一个算法',
  `STATUS_ID` VARCHAR(48) NULL COMMENT '该用户是否已经使用了该优惠\n已用、未用、过期',
  `DISCOUNT_ID` VARCHAR(48) NOT NULL COMMENT '对用优惠的编号标识',
  PRIMARY KEY (`ID`),
  INDEX `fk_discount_user_discount1_idx` (`DISCOUNT_ID` ASC),
  INDEX `fk_discount_user_discount2_idx` (`MEMBER_ID` ASC),
  CONSTRAINT `fk_discount_user_discount1`
    FOREIGN KEY (`DISCOUNT_ID`)
    REFERENCES `shoppingmall`.`discount` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_discount_user_discount2`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `shoppingmall`.`Member` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '可用优惠券的用户。每一个优惠活动，都会有一个列表来维护具体的可用用户';

USE `shoppingmall` ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
